version: '3.8'

services:
  postgres:
    image: timescale/timescaledb:latest-pg15
    container_name: kimchi_postgres
    environment:
      POSTGRES_USER: kimchi_user
      POSTGRES_PASSWORD: kimchi_password
      POSTGRES_DB: kimchi_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - kimchi_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U kimchi_user -d kimchi_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: kimchi_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - kimchi_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: kimchi_backend
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql+asyncpg://kimchi_user:kimchi_password@postgres:5432/kimchi_db
      REDIS_URL: redis://redis:6379/0
      SECRET_KEY: ${SECRET_KEY:-your-secret-key-here}
      DEBUG: ${DEBUG:-false}
    volumes:
      - ./app:/app/app
      - ./logs:/app/logs
    networks:
      - kimchi_network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

volumes:
  postgres_data:
  redis_data:

networks:
  kimchi_network:
    driver: bridge