version: '3.8'

services:
  redis:
    image: redis:7-alpine
    container_name: kimchi_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - kimchi_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  celery_worker:
    build: .
    container_name: kimchi_celery_worker
    command: celery -A celery_worker worker --loglevel=info --concurrency=4 -Q default,backtesting,data_collection,analysis,notifications
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
    volumes:
      - ./app:/app/app
      - ./logs:/app/logs
    networks:
      - kimchi_network
    restart: unless-stopped

  celery_beat:
    build: .
    container_name: kimchi_celery_beat
    command: celery -A celery_beat beat --loglevel=info
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
    volumes:
      - ./app:/app/app
      - ./logs:/app/logs
    networks:
      - kimchi_network
    restart: unless-stopped

  flower:
    build: .
    container_name: kimchi_flower
    command: celery -A celery_worker flower --port=5555
    env_file:
      - .env
    ports:
      - "5555:5555"
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./app:/app/app
    networks:
      - kimchi_network
    restart: unless-stopped

  db:
    image: timescale/timescaledb:latest-pg14
    container_name: kimchi_db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init_db.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - kimchi_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  kimchi_network:
    driver: bridge

volumes:
  redis_data:
  postgres_data: